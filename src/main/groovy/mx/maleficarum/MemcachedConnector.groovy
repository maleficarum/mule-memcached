/**
 * This file was automatically generated by the Mule Development Kit
 */
package mx.maleficarum;

import java.net.InetSocketAddress;
import java.util.ArrayList;

import net.spy.memcached.BinaryConnectionFactory;

import org.mule.api.annotations.Connector;
import org.mule.api.annotations.Connect;
import org.mule.api.annotations.ValidateConnection;
import org.mule.api.annotations.ConnectionIdentifier;
import org.mule.api.annotations.Disconnect;
import org.mule.api.annotations.param.ConnectionKey;
import org.mule.api.ConnectionException;
import org.mule.api.annotations.Configurable;
import org.mule.api.annotations.Processor;

import java.util.Arrays;

/**
 * Memcached connector
 *
 * @author Oscar I. Hernandez [ o at maleficarum dot mx ]
 */
@Connector(name="memcached", schemaVersion="1.0-SNAPSHOT")
public class MemcachedConnector {
	
	private InetSocketAddress[] servers 
	protected net.spy.memcached.MemcachedClient mc = null;	


    @Connect
    public void connect(@ConnectionKey String hostname, Integer port) throws ConnectionException {
		servers = { new InetSocketAddress(hostname, port) } as InetSocketAddress[]
		try {
			mc = new net.spy.memcached.MemcachedClient(new BinaryConnectionFactory(), new ArrayList<InetSocketAddress>(Arrays.asList(servers)));
		} catch(Exception e) {
			e.printStackTrace();
		}
    }

    @Disconnect
    public void disconnect() {

    }

    @ValidateConnection
    public boolean isConnected() {
        mc != null
    }

    @ConnectionIdentifier
    public String connectionId() {
        return "001";
    }

    /**
     * Set value on memcached server
     *
     * {@sample.xml ../../../doc/Memcached-connector.xml.sample memcached:my-processor}
     *
     * @param The value to be setted 
     */
    @Processor
    public void put(String id, Object content) {
		println("PONIENDO ${id} ${content}")
    }
    
    @Processor
    public Object get(String id) {
		println("REGRESANDO ${id}")
    	null
    }
}
